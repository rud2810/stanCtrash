import React, { useState } from 'react';

const MyComponent = () => {
  const [responses, setResponses] = useState({});
  
  const handleResponseChange = (event, questionId) => {
    const newResponses = {
      ...responses,
      [questionId]: event.target.value
    };
    setResponses(newResponses);
  };

  const questions = [
    { 
      id: 'q1',
      text: 'Did you complete the year?',
      type: 'select',
      options: ['Yes', 'No'],
      nextQuestions: [
        { response: 'Yes', text: 'How was your experience?' },
        { response: 'No', text: 'Why did you not complete the year?' }
      ]
    },
    {
      id: 'q2',
      text: 'How was your experience?',
      type: 'textarea',
      dependsOn: 'q1',
      dependsOnResponse: 'Yes'
    },
    {
      id: 'q3',
      text: 'Why did you not complete the year?',
      type: 'textarea',
      dependsOn: 'q1',
      dependsOnResponse: 'No'
    },
    // Add more questions here...
  ];

  const getQuestion = (questionId) => questions.find(question => question.id === questionId);

  const getQuestionText = (questionId) => {
    const question = getQuestion(questionId);
    if (question.dependsOn && question.dependsOnResponse) {
      const dependsOnResponse = responses[question.dependsOn];
      return dependsOnResponse === question.dependsOnResponse ? question.text : '';
    }
    return question.text;
  };

  const getNextQuestions = (questionId) => {
    const question = getQuestion(questionId);
    if (question.nextQuestions) {
      return question.nextQuestions;
    }
    return [];
  };

  return (
    <div>
      <h1>Form</h1>
      {Object.keys(responses).map(questionId => (
        <div key={questionId}>
          <p>{getQuestionText(questionId)}</p>
          {getQuestion(questionId).type === 'select' ? (
            <select value={responses[questionId]} onChange={(event) => handleResponseChange(event, questionId)}>
              <option value="">-- Select Response --</option>
              {getQuestion(questionId).options.map(option => (
                <option key={option} value={option}>{option}</option>
              ))}
            </select>
          ) : (
            <textarea
              value={responses[questionId]}
              onChange={(event) => handleResponseChange(event, questionId)}
            />
          )}
        </div>
      ))}
      {getNextQuestions(Object.keys(responses)[Object.keys(responses).length - 1]).map(nextQuestion => (
        <div key={nextQuestion.response}>
          <p>{nextQuestion.text}</p>
          <textarea
            value={responses[nextQuestion.response] || ''}
            onChange={(event) => handleResponseChange(event, nextQuestion.response)}
          />
        </div>
      ))}
    </div>
  );
};

export default MyComponent;
